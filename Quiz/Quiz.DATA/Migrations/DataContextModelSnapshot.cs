// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quiz.DATA.Data;

#nullable disable

namespace Quiz.DATA.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Quiz.DATA.Entity.Alternativa", b =>
                {
                    b.Property<int>("AlternativaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlternativaA")
                        .HasColumnType("longtext");

                    b.Property<string>("AlternativaB")
                        .HasColumnType("longtext");

                    b.Property<string>("AlternativaC")
                        .HasColumnType("longtext");

                    b.Property<string>("AlternativaD")
                        .HasColumnType("longtext");

                    b.Property<string>("AlternativaE")
                        .HasColumnType("longtext");

                    b.Property<string>("Correta")
                        .HasColumnType("longtext");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("int");

                    b.HasKey("AlternativaId");

                    b.HasIndex("QuestaoId")
                        .IsUnique();

                    b.ToTable("Alternativas");
                });

            modelBuilder.Entity("Quiz.DATA.Entity.Questao", b =>
                {
                    b.Property<int>("QuestaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("QuestaoId");

                    b.ToTable("Questoes");
                });

            modelBuilder.Entity("Quiz.DATA.Entity.Resposta", b =>
                {
                    b.Property<int>("RespostaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correta")
                        .HasColumnType("longtext");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("int");

                    b.HasKey("RespostaId");

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("Quiz.DATA.Entity.Alternativa", b =>
                {
                    b.HasOne("Quiz.DATA.Entity.Questao", null)
                        .WithOne("Alternativa")
                        .HasForeignKey("Quiz.DATA.Entity.Alternativa", "QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Quiz.DATA.Entity.Questao", b =>
                {
                    b.Navigation("Alternativa");
                });
#pragma warning restore 612, 618
        }
    }
}
